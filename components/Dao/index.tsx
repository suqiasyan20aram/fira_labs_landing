import React, {useEffect, useMemo, useRef, useState} from 'react';
import gsap from "gsap";
import Image from "next/image";
import {ScrollTrigger} from "gsap/dist/ScrollTrigger";

import styles from './index.module.scss'
import bg from '../../assets/images/DAO-bg.png'
import Button from "../Button";
import {getRandomInteger} from "../../utils/constants";

gsap.registerPlugin(ScrollTrigger);

const Authors = () => {
    const ref = useRef<HTMLDivElement>(null);

    const [style, setStyle] = useState({x: 0, y: 0})

    const letters = useMemo(() => {
        return ['x', 'y', 'z', 'x', 'y', 'z', 'x', 'y', 'z', 'x', 'y', 'z', 'x', 'y', 'z', 'x', 'y', 'z'].map((figure) => {
            const randomColor = "#" + Math.floor(Math.random() * 16777215).toString(16);
            return {
                type: figure,
                top: `${getRandomInteger(10, 90)}%`,
                left: `${getRandomInteger(10, 90)}%`,
                fontSize: getRandomInteger(12, 40),
                color: randomColor,
                animationDelay: `${getRandomInteger(-15, 15)}s`,
            }
        })
    }, [])

    const onMouseMove = (e: any) => {
        const {top, left, width, height} = e.currentTarget.getBoundingClientRect()
        const fromCenterY = (height / 2) - (e.clientY - top);
        const fromCenterX = (width / 2) - (e.clientX - left);
        setStyle({x: fromCenterX, y: fromCenterY})
    }

    const onMouseOut = () => {
        setStyle({x: 0, y: 0,})
    }

    useEffect(() => {
        let animation1: gsap.core.Tween;
        let animation2: gsap.core.Tween;
        let animation3: gsap.core.Tween;
        let animation4: gsap.core.Tween;

        const element = ref.current;
        if (element) {
            const {width, height} = element.getBoundingClientRect();

            const el1 = element.querySelector(`.${styles.card}`);
            if (el1) {
                const {width: width1, height: height1} = el1.getBoundingClientRect();
                animation1 = gsap.fromTo(el1,
                    {
                        y: -(height / 2 - height1 / 2 - 100),
                        x: -(width / 2 - width1 / 2 - 40),
                        opacity: 0,
                    },
                    {
                        y: 0,
                        x: 0,
                        opacity: 1,
                        scrollTrigger: {
                            trigger: element,
                            start: "top center-=200",
                            end: "top+=500 center",
                            scrub: 1,
                        }
                    }
                );
            }

            const el2 = element.querySelector(`.${styles.avatarWrapper}`);
            if (el2) {
                const {width: width2, height: height2} = el2.getBoundingClientRect();
                animation2 = gsap.fromTo(el2,
                    {
                        y: height / 2 - height2 / 2 - 100,
                        x: width / 2 - width2 / 2 - 40,
                        opacity: 0,
                    },
                    {
                        y: 0,
                        x: 0,
                        opacity: 1,
                        scrollTrigger: {
                            trigger: element,
                            start: "top center-=200",
                            end: "top+=500 center",
                            scrub: 1,
                        }
                    }
                );
            }

            const el3 = element.querySelector(`.${styles.sectionTitle}`);
            if (el3) {
                const {width: width3, height: height3} = el3.getBoundingClientRect();
                animation3 = gsap.fromTo(el3,
                    {
                        y: height / 2 - height3 / 2 - 100,
                        x: width / 2 - width3 / 2 - 40,
                        opacity: 0,
                    },
                    {
                        y: 0,
                        x: 0,
                        opacity: 1,
                        scrollTrigger: {
                            trigger: element,
                            start: "top center-=200",
                            end: "top+=500 center",
                            scrub: 1,
                        }
                    }
                );
            }
            animation4 = gsap.fromTo(element.querySelectorAll(`.${styles.letters}`),
                {
                    top: window.innerHeight,
                    bottom: window.innerHeight,
                },
                {
                    top: -window.innerHeight,
                    bottom: -window.innerHeight,
                    scrollTrigger: {
                        trigger: element,
                        start: "top bottom",
                        end: "bottom top",
                        scrub: 2,
                    }
                }
            );
        }

        return () => {
            !!animation1 && animation1.kill();
            !!animation2 && animation2.kill();
            !!animation3 && animation3.kill();
            !!animation4 && animation4.kill();
        }
    }, []);


    return (
        <div ref={ref} className={styles.sections} onMouseMove={onMouseMove} onMouseOut={onMouseOut}>
            <h1 className={styles.sectionTitle}>Discover <span className={styles.highlight}>Fira Labs DAO</span></h1>

            <div className={styles.mainBlock}>
                <div
                    className={styles.avatarWrapper}
                    style={{
                        transform: `translateX(${-style.x / 30}px) translateY(${style.y / 40}px) translateZ(${style.y / 200}px)`
                    }}>
                    <Image src={bg} alt={'avatar'} width={350} height={350} className={styles.avatar}/>
                </div>
                {/*<svg width="348" height="348" viewBox="0 0 348 348" fill="none" xmlns="http://www.w3.org/2000/svg"*/}
                {/*     className={styles.avatar}>*/}
                {/*    <g className={styles.border}>*/}
                {/*        <path*/}
                {/*            d="M256.383 30.2376C231.358 15.9629 203.053 8.4367 174.244 8.39699C145.434 8.35727 117.108 15.8054 92.0446 30.011"*/}
                {/*            strokeWidth="15" strokeMiterlimit="10" strokeLinecap="round"/>*/}
                {/*        <path*/}
                {/*            d="M318.279 256.24C319.919 253.354 321.466 250.432 322.919 247.472C334.855 223.109 340.65 196.196 339.8 169.08C338.95 141.963 331.48 115.466 318.042 91.8985"*/}
                {/*            strokeWidth="15" strokeMiterlimit="10" strokeLinecap="round"/>*/}
                {/*        <path*/}
                {/*            d="M91.4979 318.439C94.4001 320.1 97.3396 321.667 100.316 323.139C124.643 335.125 151.532 340.983 178.64 340.201C205.748 339.42 232.255 332.023 255.851 318.655"*/}
                {/*            strokeWidth="15" strokeMiterlimit="10" strokeLinecap="round"/>*/}
                {/*        <path*/}
                {/*            d="M29.6219 92.4323C15.6474 117.086 8.20603 144.902 8.00422 173.24C7.80241 201.578 14.8469 229.497 28.4688 254.347C28.9151 255.158 29.3916 255.956 29.8522 256.763"*/}
                {/*            strokeWidth="15" strokeMiterlimit="10" strokeLinecap="round"/>*/}
                {/*    </g>*/}

                {/*    <path*/}
                {/*        d="M316.114 177.146C316.114 214.854 301.134 251.017 274.471 277.68C247.807 304.343 211.643 319.322 173.935 319.322C136.227 319.322 100.063 304.343 73.3994 277.68C46.7357 251.017 31.7562 214.854 31.7562 177.146C31.7562 98.6198 95.4067 34.9707 173.935 34.9707C192.611 34.9526 211.108 38.6177 228.366 45.7563C245.624 52.8949 261.305 63.3668 274.511 76.5726C287.717 89.7785 298.189 105.459 305.328 122.717C312.467 139.974 316.132 158.471 316.114 177.146V177.146Z"*/}
                {/*        fill="url(#paint0_linear)"/>*/}
                {/*    <path*/}
                {/*        d="M162.914 268.943C162.17 287.504 151 303.137 134.263 313.721C112.011 307.253 91.6777 295.445 75.0309 279.325C58.3842 263.205 45.9288 243.262 38.7484 221.23C31.568 199.198 29.8802 175.746 33.8318 152.913C37.7833 130.08 47.2546 108.559 61.4215 90.2213C61.4284 90.2151 61.4327 90.2065 61.4336 90.1972C83.8899 61.1421 116.718 41.9036 153.042 36.5113C189.367 31.1191 226.368 39.9914 256.297 61.27C256.315 61.2812 256.335 61.2893 256.356 61.2942C263.306 66.2423 269.795 71.808 275.743 77.9234C275.743 77.9234 146.894 81.7746 115.423 130.57C83.942 179.354 165.902 194.556 162.914 268.943Z"*/}
                {/*        fill="url(#paint1_linear)"/>*/}
                {/*    <path*/}
                {/*        d="M111.796 305.056C92.7879 295.817 76.0783 282.457 62.8826 265.948C49.6869 249.439 40.3369 230.197 35.5127 209.62C30.6886 189.044 30.5115 167.651 34.9945 146.997C39.4774 126.344 48.5076 106.949 61.4283 90.2244C60.4466 91.8441 13.6281 169.723 61.4404 203.557C102.533 232.637 140.783 283.112 111.796 305.056Z"*/}
                {/*        fill="url(#paint2_linear)"/>*/}
                {/*    <path*/}
                {/*        d="M316.113 177.143C316.101 206.879 306.775 235.864 289.445 260.028C272.116 284.192 247.653 302.322 219.492 311.871C239.949 290.743 258.174 257.028 239.925 210.741C215.485 148.783 274.528 134.434 308.531 131.218C313.571 146.005 316.133 161.522 316.113 177.143V177.143Z"*/}
                {/*        fill="url(#paint3_linear)"/>*/}
                {/*    <path*/}
                {/*        d="M115.426 204.154C101.952 212.552 57.5469 198.431 58.7581 131.218C59.1417 110.018 65.0696 89.7531 77.6675 72.5122C101.645 50.4529 132.472 37.299 164.989 35.2524C197.506 33.2059 229.74 42.3909 256.294 61.27C253.186 59.938 167.471 23.9806 110.348 77.5753C52.159 132.166 128.902 195.756 115.426 204.154Z"*/}
                {/*        fill="url(#paint4_linear)"/>*/}
                {/*    <path d="M192.531 144.156H156.537V190.948H192.531V144.156Z" fill="#FCDDC9"/>*/}
                {/*    <path opacity="0.49"*/}
                {/*          d="M192.531 144.155V170.46C186.749 173.806 182.729 175.688 176.934 175.688C170.818 175.688 162.476 173.816 156.537 170.491V144.155H192.531Z"*/}
                {/*          fill="#F48E89"/>*/}
                {/*    <path*/}
                {/*        d="M281.312 259.332V270.322C265.191 288.911 244.526 303.004 221.333 311.223C215.079 313.438 208.676 315.206 202.172 316.514C198.993 317.162 195.777 317.694 192.525 318.11C181.118 319.6 169.574 319.716 158.139 318.458C155.199 318.134 152.271 317.714 149.392 317.211C118.418 311.808 90.1191 296.264 68.9442 273.023V259.332C68.9469 241.787 74.8628 224.755 85.7367 210.985C96.6106 197.216 111.808 187.513 128.875 183.443C134.793 182.046 140.852 181.341 146.932 181.343H203.324C223.458 181.342 242.812 189.128 257.337 203.071C271.862 217.014 280.432 236.033 281.254 256.15C281.289 257.209 281.312 258.264 281.312 259.332Z"*/}
                {/*        fill="url(#paint5_linear)"/>*/}
                {/*    <path*/}
                {/*        d="M211.729 212.544C209.33 230.541 186.533 242.539 174.535 242.539C161.337 242.539 140.94 224.542 138.541 210.144C136.142 195.746 156.538 181.601 156.538 181.601H156.514C168.251 178.074 180.766 178.065 192.508 181.577C195.387 183.413 213.949 195.938 211.729 212.544Z"*/}
                {/*        fill="#FCDDC9"/>*/}
                {/*    <path*/}
                {/*        d="M156.531 181.346V318.458C153.652 318.134 150.772 317.714 147.953 317.211C146.069 316.875 144.185 316.503 142.325 316.095C113.959 309.773 88.2919 294.708 68.9442 273.022V259.332C68.9077 242.9 74.0226 226.87 83.5697 213.496C90.56 203.559 99.8389 195.45 110.623 189.854C121.407 184.257 133.379 181.338 145.529 181.342L156.531 181.346Z"*/}
                {/*        fill="url(#paint6_linear)"/>*/}
                {/*    <path*/}
                {/*        d="M281.313 259.332V270.322C265.192 288.911 244.527 303.004 221.334 311.223C215.08 313.438 208.677 315.206 202.173 316.514C198.993 317.162 195.778 317.694 192.526 318.11V181.346H203.325C223.459 181.345 242.813 189.131 257.338 203.074C271.863 217.017 280.433 236.036 281.255 256.153C281.289 257.209 281.313 258.264 281.313 259.332Z"*/}
                {/*        fill="url(#paint7_linear)"/>*/}
                {/*    <path*/}
                {/*        d="M156.531 181.346V318.458C153.652 318.134 150.772 317.714 147.953 317.211C146.069 316.875 144.185 316.503 142.325 316.095C139.854 308.74 136.003 296.73 131.047 279.741C122.048 248.846 133.447 259.644 140.046 244.047C146.646 228.45 129.248 223.351 129.248 210.741C129.249 198.142 156.531 181.346 156.531 181.346Z"*/}
                {/*        fill="url(#paint8_linear)"/>*/}
                {/*    <path*/}
                {/*        d="M192.532 181.171V318.284C195.412 317.96 198.292 317.54 201.111 317.036C202.995 316.7 204.878 316.329 206.738 315.92C209.209 308.565 213.061 296.555 218.016 279.566C227.015 248.671 215.616 259.47 209.017 243.873C202.418 228.276 219.815 223.176 219.815 210.566C219.816 197.968 192.532 181.171 192.532 181.171Z"*/}
                {/*        fill="url(#paint9_linear)"/>*/}
                {/*    <path*/}
                {/*        d="M209.282 195.902C203.392 197.63 196.456 198.913 192.257 203.831C191.599 204.613 191.005 205.446 190.481 206.323V206.335C189.064 208.842 187.995 211.53 187.301 214.325C186.94 215.645 186.629 216.968 186.329 218.26C184.708 225.391 183.939 232.689 184.037 240.001C184.025 240.241 184.037 240.493 184.037 240.733C183.869 240.733 180.378 238.573 180.149 238.369C176.79 235.25 175.482 230.391 174.966 226C171.582 196.809 189.34 170.413 210.181 151.841C214.335 148.145 221.172 144.198 221.988 138.151C223.196 129.165 221.256 120.79 219.612 115.739V115.727C219.079 114.062 218.454 112.428 217.74 110.832C218.064 111.455 219.468 112.235 221.063 112.979C223.055 113.915 225.346 114.815 226.126 115.32C231.981 119.096 237.32 123.91 241.064 129.826C257.467 155.673 235.198 188.272 209.282 195.902Z"*/}
                {/*        fill="#1b1b1b"/>*/}
                {/*    <path*/}
                {/*        d="M131.246 123.387C130.981 123.438 130.711 123.455 130.442 123.435C128.594 123.36 123.771 122.056 118.144 111.761C113.093 102.487 115.72 89.8891 120.855 87.0936C122.727 86.0734 124.923 86.3385 127.202 88.5336C127.605 88.9318 127.986 89.3523 128.342 89.7932C129.787 91.6301 130.892 93.7104 131.606 95.9361C135.529 107.61 131.246 123.387 131.246 123.387Z"*/}
                {/*        fill="#FCE2D1"/>*/}
                {/*    <path*/}
                {/*        d="M230.135 111.761C224.736 121.635 220.08 123.244 218.077 123.423C217.729 123.465 217.377 123.453 217.033 123.387C217.033 123.387 210.939 100.96 219.937 89.7924C220.349 89.276 220.798 88.7906 221.281 88.3403C229.739 80.6026 236.974 99.2231 230.135 111.761Z"*/}
                {/*        fill="#FCE2D1"/>*/}
                {/*    <path*/}
                {/*        d="M221.987 99.3553C221.969 107.535 220.649 115.659 218.075 123.423C211.285 144.156 196.623 160.365 182.201 164.636C179.832 165.36 177.371 165.735 174.894 165.752C157.413 165.752 138.456 147.695 130.441 123.435C128.861 118.672 127.748 113.765 127.118 108.786C126.719 105.658 126.519 102.508 126.519 99.3553C126.514 95.7369 126.743 92.1219 127.203 88.5329C131.03 58.3341 150.636 35.3338 174.248 35.3338C197.824 35.3338 217.394 58.2382 221.281 88.3433C221.755 91.9948 221.991 95.6732 221.987 99.3553V99.3553Z"*/}
                {/*        fill="#FCDDC9"/>*/}
                {/*    <path opacity="0.49"*/}
                {/*          d="M230.134 111.761C224.735 121.635 220.08 123.244 218.076 123.423C211.285 144.156 196.624 160.365 182.202 164.636C187.445 161.061 196.108 154.186 202.731 144.156C212.93 128.726 212.33 121.36 211.91 104.982C211.502 88.6054 192.533 80.9628 176.539 77.567C160.534 74.1735 151.738 65.5651 151.738 65.5651L144.935 69.7644C141.036 72.1762 135.565 85.23 131.605 95.9316C129.578 101.414 127.934 106.286 127.118 108.781C126.746 109.91 126.542 110.558 126.542 110.558C126.542 110.558 123.879 100.407 120.855 87.0899C122.727 86.0697 124.923 86.3347 127.202 88.5299C131.029 58.3311 150.635 35.3308 174.247 35.3308C197.823 35.3308 217.393 58.2352 221.28 88.3403C229.739 80.6019 236.974 99.2231 230.134 111.761Z"*/}
                {/*          fill="1b1b1b"/>*/}
                {/*    <path*/}
                {/*        d="M220.956 112.843C221.123 112.147 225.383 94.0302 204.17 83.4124C182.526 72.6021 179.982 79.8127 164.708 68.9896C149.435 58.1664 150.707 55.7682 150.707 55.7682C150.707 55.7682 136.705 64.1787 131.605 84.6138C126.518 105.058 127.562 112.869 127.562 112.869C127.562 112.869 127.466 112.689 127.297 112.353C125.054 107.95 109.636 75.8317 120.146 43.7489C128.857 17.1732 153.801 3.92762 177.894 5.06785C188.236 5.48912 198.267 8.72477 206.906 14.4261C206.912 14.433 206.92 14.4373 206.93 14.4381C207.745 14.9901 208.537 15.5542 209.33 16.1749C217.787 22.5338 224.592 31.7002 228.359 43.7459C239.829 80.4486 221.508 111.905 220.956 112.843Z"*/}
                {/*        fill="#000000"/>*/}
                {/*    <path*/}
                {/*        d="M126.979 111.711C127.101 111.959 127.211 112.181 127.298 112.349C127.195 112.141 127.11 111.925 127.046 111.703L126.979 111.711Z"*/}
                {/*        fill="#3A47AF"/>*/}
                {/*    <path*/}
                {/*        d="M206.906 14.4215C205.888 13.7419 204.846 13.1038 203.788 12.496C203.533 12.3495 203.271 12.2151 203.014 12.0723C202.197 11.6193 201.375 11.1866 200.538 10.7788C200.236 10.6323 199.934 10.4934 199.632 10.3514C198.804 9.96631 197.968 9.60209 197.124 9.25877C196.837 9.14248 196.553 9.02468 196.265 8.91292C195.324 8.54794 194.374 8.20965 193.415 7.89804C193.23 7.83838 193.048 7.77118 192.863 7.71228C190.485 6.96156 188.061 6.36554 185.605 5.92793C185.514 5.91132 185.423 5.89999 185.333 5.88488C184.222 5.69157 183.106 5.53073 181.985 5.40236C181.771 5.37744 181.556 5.35781 181.34 5.33516C180.312 5.22743 179.28 5.14613 178.244 5.09125C178.125 5.0837 178.007 5.0686 177.866 5.07238C153.787 3.95027 128.858 17.1792 120.144 43.7444C110.45 73.3376 122.807 102.941 126.545 110.816C126.613 104.028 127.431 62.1867 137.338 44.572C147.317 26.8319 172.272 21.8429 176.001 21.1882L176.184 21.1557C176.381 21.1225 176.486 21.1066 176.486 21.1066V21.1111C178.616 20.7581 180.771 20.5791 182.93 20.5758C195.156 20.5758 204.275 18.8843 209.326 16.1727C208.537 15.5489 207.745 14.9833 206.906 14.4215Z"*/}
                {/*        fill="#1b1b1b"/>*/}

                {/*    <g className={styles.circle}>*/}
                {/*        <path*/}
                {/*            d="M281.312 106.917C289.313 106.917 295.798 100.432 295.798 92.4316C295.798 84.4315 289.313 77.9461 281.312 77.9461C273.312 77.9461 266.826 84.4315 266.826 92.4316C266.826 100.432 273.312 106.917 281.312 106.917Z"*/}
                {/*            fill="#ec0f46"/>*/}
                {/*        <path*/}
                {/*            d="M285.556 190.948C291.213 190.948 295.8 186.362 295.8 180.705C295.8 175.048 291.213 170.462 285.556 170.462C279.899 170.462 275.313 175.048 275.313 180.705C275.313 186.362 279.899 190.948 285.556 190.948Z"*/}
                {/*            fill="#ec0f46"/>*/}
                {/*        <path*/}
                {/*            d="M85.1298 111.349C88.6472 111.349 91.4986 108.498 91.4986 104.98C91.4986 101.463 88.6472 98.6115 85.1298 98.6115C81.6124 98.6115 78.761 101.463 78.761 104.98C78.761 108.498 81.6124 111.349 85.1298 111.349Z"*/}
                {/*            fill="#ec0f46"/>*/}
                {/*        <path*/}
                {/*            d="M52.2519 193.347C65.836 193.347 76.8482 182.336 76.8482 168.752C76.8482 155.168 65.836 144.156 52.2519 144.156C38.6677 144.156 27.6555 155.168 27.6555 168.752C27.6555 182.336 38.6677 193.347 52.2519 193.347Z"*/}
                {/*            fill="#ec0f46"/>*/}
                {/*    </g>*/}


                {/*    <defs>*/}
                {/*        <linearGradient id="paint0_linear" x1="31.7562" y1="177.146" x2="316.114" y2="177.146"*/}
                {/*                        gradientUnits="userSpaceOnUse">*/}
                {/*            <stop stopColor="#ec0f46"/>*/}
                {/*            <stop offset="1" stopColor="#ec0f46"/>*/}
                {/*        </linearGradient>*/}
                {/*        <linearGradient id="paint1_linear" x1="76.8877" y1="31.9035" x2="217.449" y2="195.615"*/}
                {/*                        gradientUnits="userSpaceOnUse">*/}
                {/*            <stop stopColor="#2ADCFC"/>*/}
                {/*            <stop offset="0.045" stopColor="#ec0f46"/>*/}
                {/*            <stop offset="1" stopColor="#ec0f46"/>*/}
                {/*        </linearGradient>*/}
                {/*        <linearGradient id="paint2_linear" x1="5.42525" y1="55.4216" x2="166.218" y2="119.563"*/}
                {/*                        gradientUnits="userSpaceOnUse">*/}
                {/*            <stop stopColor="#ec0f46"/>*/}
                {/*            <stop offset="0.178" stopColor="#ec0f46"/>*/}
                {/*        </linearGradient>*/}
                {/*        <linearGradient id="paint3_linear" x1="219.492" y1="221.545" x2="316.114" y2="221.545"*/}
                {/*                        gradientUnits="userSpaceOnUse">*/}
                {/*            <stop offset="1" stopColor="#ec0f46"/>*/}
                {/*        </linearGradient>*/}
                {/*        <linearGradient id="paint4_linear" x1="58.7338" y1="120.653" x2="256.294" y2="120.653"*/}
                {/*                        gradientUnits="userSpaceOnUse">*/}
                {/*            <stop stopColor="#2ADCFC" stopOpacity="0"/>*/}
                {/*            <stop offset="0.595" stopColor="#ec0f46"/>*/}
                {/*        </linearGradient>*/}
                {/*        <linearGradient id="paint5_linear" x1="175.128" y1="169.338" x2="175.128" y2="358.508"*/}
                {/*                        gradientUnits="userSpaceOnUse">*/}
                {/*            <stop stopColor="#333333"/>*/}
                {/*            <stop offset="1" stopColor="#222222"/>*/}
                {/*        </linearGradient>*/}
                {/*        <linearGradient id="paint6_linear" x1="112.737" y1="169.413" x2="112.737" y2="357.399"*/}
                {/*                        gradientUnits="userSpaceOnUse">*/}
                {/*            <stop stopColor="#000000"/>*/}
                {/*            <stop offset="0.784" stopColor="#000000"/>*/}
                {/*        </linearGradient>*/}
                {/*        <linearGradient id="paint7_linear" x1="236.92" y1="169.447" x2="236.92" y2="356.951"*/}
                {/*                        gradientUnits="userSpaceOnUse">*/}
                {/*            <stop stopColor="#000000"/>*/}
                {/*            <stop offset="0.784" stopColor="#000000"/>*/}
                {/*        </linearGradient>*/}
                {/*        <linearGradient id="paint8_linear" x1="142.126" y1="169.417" x2="142.126" y2="357.398"*/}
                {/*                        gradientUnits="userSpaceOnUse">*/}
                {/*            <stop stopColor="#1b1b1b"/>*/}
                {/*            <stop offset="0.67" stopColor="#111111"/>*/}
                {/*        </linearGradient>*/}
                {/*        <linearGradient id="paint9_linear" x1="79.7141" y1="169.242" x2="79.7141" y2="357.224"*/}
                {/*                        gradientUnits="userSpaceOnUse">*/}
                {/*            <stop stopColor="#1b1b1b"/>*/}
                {/*            <stop offset="0.67" stopColor="#111111"/>*/}
                {/*        </linearGradient>*/}
                {/*    </defs>*/}
                {/*</svg>*/}

                <div
                    className={styles.card}
                    style={{
                        transform: `translateX(${style.x / 30}px) translateY(${style.y / 40}px) translateZ(${style.y / 200}px)`
                    }}
                >
                    <p className={styles.cardText}>
                        DAO-FL is a decentralized organization with members from Europe, UK, United States, Canada,
                        Western
                        Asia and UAE.
                    </p>
                    <p className={styles.cardText}>
                        We are all-inclusive community for digital product experts who share a common goal and attempt
                        to
                        act in the best interest of the business we work with.
                    </p>
                    <Button text={'Join Fira Labs DAO'}/>
                </div>
            </div>

            <div className={styles.letters}>
                {letters.map((letter, index) => {
                    return (
                        <div key={index} style={{
                            position: 'absolute',
                            top: letter.top,
                            left: letter.left,
                            color: letter.color,
                            fontSize: letter.fontSize,
                            animationDelay: letter.animationDelay
                        }}>
                            {letter.type}
                        </div>
                    )
                })}
            </div>

        </div>
    )
}

export default Authors;